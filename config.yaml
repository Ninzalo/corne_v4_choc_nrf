meta:
  engine: 4.1.0

units:
  # main variables
  ## keycap width
  keycap_x: 16.5
  ## keycap height
  keycap_y: 16.5
  ## space between keycaps
  spacing_unlimited: 1
  ## 1.5x keycap sizing (leave default if you're not using them)
  keycap_1_5_x: 1.5keycap_x
  keycap_1_5_y: keycap_y
  ### spacing limitation
  spacing: max(0.5, spacing_unlimited)
  ## additional spacing around the plate (2 is recomended)
  plate_spacing_unlimited: 2
  ### plate spacing limitation
  plate_spacing: max(spacing, plate_spacing_unlimited)
  ## is inner thumbs keycap 1.5x
  is_thumbs_inner_1_5_uncalculated: 0
  ### is inner thumbs keycap calculation
  is_thumbs_inner_1_5: (is_thumbs_inner_1_5_uncalculated == 1)

  # default values
  ## keys in column
  keys_x: 6
  ## amount of columns
  keys_y: 3
  ## switch width
  switch_x: 15
  ## switch height
  switch_y: 15
  key_spread: keycap_x + spacing
  key_padding: keycap_y + spacing
  stagger_step: 2.381
  thumb_keys_splay_unlimited: 11.94
  # thumb_keys_splay_unlimited: 0
  ### angle limitation
  thumb_keys_splay: min(max(0.001, thumb_keys_splay_unlimited), 44.987)

  # MCU
  ## space between inner row and mcu
  mcu_spacing: 2spacing
  mcu_x: 17.78
  mcu_y: 33
  mcu_shift_x: keycap_x/2 + mcu_spacing + mcu_x/2
  mcu_shift_y: +keycap_y/2 - mcu_y/2 - stagger_step

  # single key plate
  key_plate_x: keycap_x + plate_spacing
  key_plate_y: keycap_x + plate_spacing

  # tile key plate
  tile_plate_x: (keys_x * keycap_x + (keys_x - 1) * spacing)/keys_x
  tile_plate_y: (keys_y * keycap_y + (keys_y - 1) * spacing)/keys_y
  tile_shift_x: (-keycap_x/2 + keys_x * keycap_x/2 + (keys_x - 1) * spacing/2)/keys_x
  tile_shift_y: (-keycap_y/2 + keys_y * keycap_y/2 + (keys_y - 1) * spacing/2)/keys_y

  # column plate
  column_plate_x: key_plate_x
  column_plate_y: keys_y * tile_plate_y + plate_spacing
  column_plate_shift_x: 0
  column_plate_shift_y: 0

  # outer bottom plate
  outer_bottom_size_x: keys_x * tile_plate_x + plate_spacing
  outer_bottom_size_y: column_plate_y
  outer_bottom_shift_x: keys_x * tile_shift_x
  outer_bottom_shift_y: keys_y * tile_shift_y

  # ref positions
  ref_position_circle_radius: 0.5

  _1_2_x: 4(keycap_x + spacing)
  _1_2_y: stagger_step

  _1_8_x: (keycap_x + spacing)
  _1_8_y: 2stagger_step

  _1_9_x: -(keycap_x + spacing)
  _1_9_y: 0

  _1_11_x: 0
  _1_11_y: 2(keycap_y + spacing)

  _2_3_x: -1.5(keycap_x+spacing)
  _2_3_y: -(keycap_y + spacing)

  _2_6_x: 0
  _2_6_y: 2(keycap_y + spacing)

  _3_4_x: (keycap_x + spacing)/2 + cos((90 - thumb_keys_splay) * pi/180) * spacing/2 + cos(-thumb_keys_splay * pi/180) * spacing/2 + cos(-thumb_keys_splay * pi/180) * keycap_x/2 + cos((90 - thumb_keys_splay) * pi/180) * keycap_y/2
  _3_4_y: -(keycap_y + spacing)/2 + sin((90 - thumb_keys_splay) * pi/180) * spacing/2 + sin(-thumb_keys_splay * pi/180) * spacing/2 + sin((90 - thumb_keys_splay) * pi/180) * keycap_y/2 + sin(-thumb_keys_splay * pi/180) * keycap_x/2

  _4_5_x: -cos((90 - thumb_keys_splay) * pi/180) * keycap_y/2 + cos(-thumb_keys_splay * pi/180) * keycap_x/2 + cos(-thumb_keys_splay * pi/180) * spacing/2 - cos((90 - thumb_keys_splay) * pi/180) * spacing/2 + cos((90 - 2thumb_keys_splay) * pi/180) * spacing/2 + cos(-2thumb_keys_splay * pi/180) * spacing/2 + is_thumbs_inner_1_5 * ( cos((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 + cos(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( cos((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 + cos(-2thumb_keys_splay * pi/180) * keycap_x/2 )
  _4_5_y: -sin((90 - thumb_keys_splay) * pi/180) * keycap_y/2 + sin(-thumb_keys_splay * pi/180) * keycap_x/2 + sin(-thumb_keys_splay * pi/180) * spacing/2 - sin((90 - thumb_keys_splay) * pi/180) * spacing/2 + sin((90 - 2thumb_keys_splay) * pi/180) * spacing/2 + sin(-2thumb_keys_splay * pi/180) * spacing/2 + is_thumbs_inner_1_5 * ( sin((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 + sin(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( sin((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 + sin(-2thumb_keys_splay * pi/180) * keycap_x/2 )

  _6_7_x: mcu_shift_x
  _6_7_y: mcu_shift_y

  _8_12_x: 0
  _8_12_y: 2(keycap_y + spacing)

  _9_10_x: 0
  _9_10_y: 2(keycap_y + spacing)

  _12_13_x: (keycap_x + spacing)
  _12_13_y: stagger_step

  _13_14_x: (keycap_x + spacing)
  _13_14_y: -stagger_step

  ## centers
  _1_center_x: 0
  _1_center_y: 0

  _2_center_x: _1_center_x + _1_2_x
  _2_center_y: _1_center_y + _1_2_y

  _3_center_x: _2_center_x + _2_3_x
  _3_center_y: _2_center_y + _2_3_y

  _4_center_x: _3_center_x + _3_4_x
  _4_center_y: _3_center_y + _3_4_y

  _5_center_x: _4_center_x + _4_5_x
  _5_center_y: _4_center_y + _4_5_y

  _6_center_x: _2_center_x + _2_6_x
  _6_center_y: _2_center_y + _2_6_y

  _7_center_x: _6_center_x + _6_7_x
  _7_center_y: _6_center_y + _6_7_y

  _8_center_x: _1_center_x + _1_8_x
  _8_center_y: _1_center_y + _1_8_y

  _9_center_x: _1_center_x + _1_9_x
  _9_center_y: _1_center_y + _1_9_y

  _10_center_x: _9_center_x + _9_10_x
  _10_center_y: _9_center_y + _9_10_y

  _11_center_x: _1_center_x + _1_11_x
  _11_center_y: _1_center_y + _1_11_y

  _12_center_x: _8_center_x + _8_12_x
  _12_center_y: _8_center_y + _8_12_y

  _13_center_x: _12_center_x + _12_13_x
  _13_center_y: _12_center_y + _12_13_y

  _14_center_x: _13_center_x + _13_14_x
  _14_center_y: _13_center_y + _13_14_y

  ## corners

  # relative to center corners
  _1_br_x: (keycap_x + plate_spacing)/2
  _1_br_y: -(keycap_y + plate_spacing)/2

  _2_br_x: (keycap_x + mcu_spacing)/2
  _2_br_y: -(keycap_y + plate_spacing)/2
  _2_bl_x: -(keycap_x + plate_spacing)/2
  _2_bl_y: -(keycap_y + plate_spacing)/2

  _3_bl_x: -(keycap_x + plate_spacing)/2
  _3_bl_y: -(keycap_y + plate_spacing)/2

  _3_tl_x: -(keycap_x + plate_spacing)/2
  _3_tl_y: (keycap_y + plate_spacing)/2
  _3_tr_x: (keycap_x + plate_spacing)/2
  _3_tr_y: (keycap_y + plate_spacing)/2

  _4_br_x: cos(-thumb_keys_splay * pi/180) * keycap_x/2 - cos((90 - thumb_keys_splay) * pi/180) * keycap_y/2 + cos(-thumb_keys_splay * pi/180) * plate_spacing/2 - cos((90 - thumb_keys_splay) * pi/180) * plate_spacing/2
  _4_br_y: sin(-thumb_keys_splay * pi/180) * keycap_x/2 - sin((90 - thumb_keys_splay) * pi/180) * keycap_y/2 + sin(-thumb_keys_splay * pi/180) * plate_spacing/2 - sin((90 - thumb_keys_splay) * pi/180) * plate_spacing/2

  _5_br_x: is_thumbs_inner_1_5 * ( -cos((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 + cos(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( -cos((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 + cos(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( -cos((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 + cos(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_br_y: is_thumbs_inner_1_5 * ( -sin((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 + sin(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( -sin((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 + sin(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( -sin((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 + sin(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_bl_x: is_thumbs_inner_1_5 * ( -cos((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 - cos(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( -cos((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 - cos(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( -cos((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 - cos(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_bl_y: is_thumbs_inner_1_5 * ( -sin((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 - sin(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( -sin((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 - sin(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( -sin((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 - sin(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_tr_x: is_thumbs_inner_1_5 * ( cos((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 + cos(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( cos((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 + cos(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( cos((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 + cos(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_tr_y: is_thumbs_inner_1_5 * ( sin((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 + sin(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( sin((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 + sin(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( sin((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 + sin(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_tl_x: is_thumbs_inner_1_5 * ( cos((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 - cos(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( cos((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 - cos(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( cos((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 - cos(-2thumb_keys_splay * pi/180) * plate_spacing/2 )
  _5_tl_y: is_thumbs_inner_1_5 * ( sin((90 - 2thumb_keys_splay) * pi/180) * keycap_1_5_x/2 - sin(-2thumb_keys_splay * pi/180) * keycap_1_5_y/2 ) + (1 - is_thumbs_inner_1_5) * ( sin((90 - 2thumb_keys_splay) * pi/180) * keycap_y/2 - sin(-2thumb_keys_splay * pi/180) * keycap_x/2 ) + ( sin((90 - 2thumb_keys_splay) * pi/180) * plate_spacing/2 - sin(-2thumb_keys_splay * pi/180) * plate_spacing/2 )

  _6_tl_x: -keycap_x/2 - spacing + plate_spacing/2
  _6_tl_y: (keycap_y + plate_spacing)/2
  _6_tr_x: (keycap_x + plate_spacing)/2
  _6_tr_y: (keycap_y + plate_spacing)/2

  _7_br_x: (mcu_x + plate_spacing)/2
  _7_br_y: -(mcu_y + plate_spacing)/2
  _7_tr_x: _7_br_x
  _7_tr_y: (mcu_y + plate_spacing)/2
  _7_tl_x: -(mcu_x + mcu_spacing)/2
  _7_tl_y: _7_tr_y

  _8_br_x: (keycap_x + spacing)/2
  _8_br_y: -(keycap_y + plate_spacing)/2 - 2stagger_step

  _9_bl_x: -(keycap_x + plate_spacing)/2
  _9_bl_y: -(keycap_y + plate_spacing)/2

  _10_tl_x: -(keycap_x + plate_spacing)/2
  _10_tl_y: (keycap_y + plate_spacing)/2

  _11_tr_x: (keycap_x - plate_spacing)/2 + spacing
  _11_tr_y: (keycap_y + plate_spacing)/2

  _12_tl_x: -(keycap_x + plate_spacing)/2
  _12_tl_y: (keycap_y + plate_spacing)/2
  _12_tr_x: (keycap_x - plate_spacing)/2 + spacing
  _12_tr_y: (keycap_y + plate_spacing)/2

  _13_tl_x: -(keycap_x + plate_spacing)/2
  _13_tl_y: (keycap_y + plate_spacing)/2
  _13_tr_x: (keycap_x + plate_spacing)/2
  _13_tr_y: (keycap_y + plate_spacing)/2

  _14_tl_x: -keycap_x/2 - spacing + plate_spacing/2
  _14_tl_y: (keycap_y + plate_spacing)/2
  _14_tr_x: (keycap_x + plate_spacing)/2
  _14_tr_y: (keycap_y + plate_spacing)/2

  # relative to main ref center (1) corners
  _1_1_br_x: _1_center_x + _1_br_x
  _1_1_br_y: _1_center_y + _1_br_y

  _1_2_br_x: _2_center_x + _2_br_x
  _1_2_br_y: _2_center_y + _2_br_y
  _1_2_bl_x: _2_center_x + _2_bl_x
  _1_2_bl_y: _2_center_y + _2_bl_y

  _1_3_bl_x: _3_center_x + _3_bl_x
  _1_3_bl_y: _3_center_y + _3_bl_y

  _1_3_tr_x: _3_center_x + _3_tr_x
  _1_3_tr_y: _3_center_y + _3_tr_y
  _1_3_tl_x: _3_center_x + _3_tl_x
  _1_3_tl_y: _3_center_y + _3_tl_y

  _1_4_br_x: _4_center_x + _4_br_x
  _1_4_br_y: _4_center_y + _4_br_y

  _1_5_br_x: _5_center_x + _5_br_x
  _1_5_br_y: _5_center_y + _5_br_y
  _1_5_bl_x: _5_center_x + _5_bl_x
  _1_5_bl_y: _5_center_y + _5_bl_y
  _1_5_tr_x: _5_center_x + _5_tr_x
  _1_5_tr_y: _5_center_y + _5_tr_y
  _1_5_tl_x: _5_center_x + _5_tl_x
  _1_5_tl_y: _5_center_y + _5_tl_y

  _1_6_tl_x: _6_center_x + _6_tl_x
  _1_6_tl_y: _6_center_y + _6_tl_y
  _1_6_tr_x: _6_center_x + _6_tr_x
  _1_6_tr_y: _6_center_y + _6_tr_y

  _1_7_br_x: _7_center_x + _7_br_x
  _1_7_br_y: _7_center_y + _7_br_y
  _1_7_tr_x: _7_center_x + _7_tr_x
  _1_7_tr_y: _7_center_y + _7_tr_y
  _1_7_tl_x: _7_center_x + _7_tl_x
  _1_7_tl_y: _7_center_y + _7_tl_y

  _1_8_br_x: _8_center_x + _8_br_x
  _1_8_br_y: _8_center_y + _8_br_y

  _1_9_bl_x: _9_center_x + _9_bl_x
  _1_9_bl_y: _9_center_y + _9_bl_y

  _1_10_tl_x: _10_center_x + _10_tl_x
  _1_10_tl_y: _10_center_y + _10_tl_y

  _1_11_tr_x: _11_center_x + _11_tr_x
  _1_11_tr_y: _11_center_y + _11_tr_y

  _1_12_tl_x: _12_center_x + _12_tl_x
  _1_12_tl_y: _12_center_y + _12_tl_y
  _1_12_tr_x: _12_center_x + _12_tr_x
  _1_12_tr_y: _12_center_y + _12_tr_y

  _1_13_tl_x: _13_center_x + _13_tl_x
  _1_13_tl_y: _13_center_y + _13_tl_y
  _1_13_tr_x: _13_center_x + _13_tr_x
  _1_13_tr_y: _13_center_y + _13_tr_y

  _1_14_tl_x: _14_center_x + _14_tl_x
  _1_14_tl_y: _14_center_y + _14_tl_y
  _1_14_tr_x: _14_center_x + _14_tr_x
  _1_14_tr_y: _14_center_y + _14_tr_y

  ## sections
  _s1_b_x: _1_7_br_x
  _s1_b_y: _1_5_tr_y
  _s1_t_x: _s1_b_x
  _s1_t_y: _1_7_br_y

  _s2_t_x: _1_2_br_x
  _s2_t_y: _2_center_y

  ## intersections
  _2_6__5__no_s2_intersection_x: ((_1_7_tl_x * _1_2_br_y - _1_7_tl_y * _1_2_br_x) * (_1_5_tl_x - _1_5_tr_x) - (_1_7_tl_x - _1_2_br_x) * (_1_5_tl_x * _1_5_tr_y - _1_5_tl_y * _1_5_tr_x)) / ((_1_7_tl_x - _1_2_br_x) * (_1_5_tl_y - _1_5_tr_y) - (_1_7_tl_y - _1_2_br_y) * (_1_5_tl_x - _1_5_tr_x))
  _2_6__5__no_s2_intersection_y: ((_1_7_tl_x * _1_2_br_y - _1_7_tl_y * _1_2_br_x) * (_1_5_tl_y - _1_5_tr_y) - (_1_7_tl_y - _1_2_br_y) * (_1_5_tl_x * _1_5_tr_y - _1_5_tl_y * _1_5_tr_x)) / ((_1_7_tl_x - _1_2_br_x) * (_1_5_tl_y - _1_5_tr_y) - (_1_7_tl_y - _1_2_br_y) * (_1_5_tl_x - _1_5_tr_x))

  _2_6__5_intersection_x: _2_6__5__no_s2_intersection_x * (_s2_t_x == _2_6__5__no_s2_intersection_x) + _s2_t_x * (1 - (_s2_t_x == _2_6__5__no_s2_intersection_x))
  _2_6__5_intersection_y: _2_6__5__no_s2_intersection_y * (_s2_t_y >= _2_6__5__no_s2_intersection_y) + _s2_t_y * (1 - (_s2_t_y >= _2_6__5__no_s2_intersection_y))

  _3_4__5_intersection_x: ((_1_3_bl_x * _1_4_br_y - _1_3_bl_y * _1_4_br_x) * (_1_5_bl_x - _1_5_br_x) - (_1_3_bl_x - _1_4_br_x) * (_1_5_bl_x * _1_5_br_y - _1_5_bl_y * _1_5_br_x)) / ((_1_3_bl_x - _1_4_br_x) * (_1_5_bl_y - _1_5_br_y) - (_1_3_bl_y - _1_4_br_y) * (_1_5_bl_x - _1_5_br_x))
  _3_4__5_intersection_y: ((_1_3_bl_x * _1_4_br_y - _1_3_bl_y * _1_4_br_x) * (_1_5_bl_y - _1_5_br_y) - (_1_3_bl_y - _1_4_br_y) * (_1_5_bl_x * _1_5_br_y - _1_5_bl_y * _1_5_br_x)) / ((_1_3_bl_x - _1_4_br_x) * (_1_5_bl_y - _1_5_br_y) - (_1_3_bl_y - _1_4_br_y) * (_1_5_bl_x - _1_5_br_x))

  _5__7__no_s1_intersection_x: ((_1_5_br_x - _1_5_tr_x) * (_1_7_tr_x * _1_7_br_y - _1_7_br_x * _1_7_tr_y) - (_1_7_br_x - _1_7_tr_x) * (_1_5_tr_x * _1_5_br_y - _1_5_br_x * _1_5_tr_y)) / ((_1_5_br_x - _1_5_tr_x) * (_1_7_br_y - _1_7_tr_y) - (_1_7_br_x - _1_7_tr_x) * (_1_5_br_y - _1_5_tr_y))
  _5__7__no_s1_intersection_y: ((_1_5_br_y - _1_5_tr_y) * (_1_7_tr_x * _1_7_br_y - _1_7_br_x * _1_7_tr_y) - (_1_7_br_y - _1_7_tr_y) * (_1_5_tr_x * _1_5_br_y - _1_5_br_x * _1_5_tr_y)) / ((_1_5_br_x - _1_5_tr_x) * (_1_7_br_y - _1_7_tr_y) - (_1_7_br_x - _1_7_tr_x) * (_1_5_br_y - _1_5_tr_y))

  _5__7_intersection_x: _5__7__no_s1_intersection_x * (_s1_b_x == _5__7__no_s1_intersection_x == _s1_t_x) + _s1_b_x * (1 - (_s1_b_x == _5__7__no_s1_intersection_x == _s1_t_x))
  _5__7_intersection_y: _5__7__no_s1_intersection_y * (_s1_b_y <= _5__7__no_s1_intersection_y <= _s1_t_y) + _1_5_tr_y * (1 - (_s1_b_y <= _5__7__no_s1_intersection_y <= _s1_t_y))

points:
  zones:
    matrix:
      key:
        padding: key_padding
        spread: key_spread
      columns:
        outer:
        pinky:
        ring:
          key.stagger: 2stagger_step
        middle:
          key.stagger: stagger_step
        index:
          key.stagger: -stagger_step
        inner:
          key.stagger: -stagger_step
      rows:
        bottom:
        home:
        top:
    thumbs:
      key:
        padding: key_padding
        spread: key_spread
      anchor:
        ref: matrix_inner_bottom
        shift: [_2_3_x, _2_3_y]
      columns:
        outer:
        middle:
          key:
            splay: -thumb_keys_splay
            origin: [-(keycap_x + spacing)/2, -(keycap_y + spacing)/2]
        inner:
          key:
            splay: -thumb_keys_splay
            origin: [-(keycap_x + spacing)/2, -(keycap_y + spacing)/2]
            rotate: is_thumbs_inner_1_5 * 90
            shift: [is_thumbs_inner_1_5 * (-keycap_x + keycap_1_5_y)/2, is_thumbs_inner_1_5 * (-keycap_y + keycap_1_5_x)/2]
      rows:
        cluster:

outlines:
  keys:
    - what: rectangle
      where: true
      size: [keycap_x, keycap_y]
    - what: rectangle
      where:
        ref: thumbs_inner_cluster
      size: [is_thumbs_inner_1_5 * keycap_1_5_x + (1 - is_thumbs_inner_1_5) * keycap_x, is_thumbs_inner_1_5 * keycap_1_5_y + (1 - is_thumbs_inner_1_5) * keycap_y]

  switches:
    - what: rectangle
      where: true
      size: [switch_x, switch_y]

  mcu:
    - what: rectangle
      where:
        ref: matrix_inner_top
        shift: [mcu_shift_x, mcu_shift_y]
      size: [mcu_x, mcu_y]

  switches_and_mcu:
    - what: outline
      name: switches
    - what: outline
      name: mcu

  keys_and_mcu:
    - what: outline
      name: keys
    - what: outline
      name: mcu

  keys_and_switches:
    - what: outline
      name: keys
    - what: outline
      name: switches
      operation: stack

  ref_centers:
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_center_x, _1_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_2_center_x, _2_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_3_center_x, _3_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_4_center_x, _4_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_5_center_x, _5_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_6_center_x, _6_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_7_center_x, _7_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_8_center_x, _8_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_9_center_x, _9_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_10_center_x, _10_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_11_center_x, _11_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_12_center_x, _12_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_13_center_x, _13_center_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_14_center_x, _14_center_y]
      radius: ref_position_circle_radius
      operation: stack

  ref_corners:
    # pinky bottom corners (1)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_1_br_x, _1_1_br_y]
      radius: ref_position_circle_radius
      operation: stack
    # inner bottom corners (2)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_2_br_x, _1_2_br_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_2_bl_x, _1_2_bl_y]
      radius: ref_position_circle_radius
      operation: stack
    # outer thumb corners (3)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_3_bl_x, _1_3_bl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_3_tl_x, _1_3_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_3_tr_x, _1_3_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    # middle thumb corners (4)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_4_br_x, _1_4_br_y]
      radius: ref_position_circle_radius
      operation: stack
    # inner thumb corners (5)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_5_br_x, _1_5_br_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_5_bl_x, _1_5_bl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_5_tr_x, _1_5_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_5_tl_x, _1_5_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    # top inner corners (6)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_6_tl_x, _1_6_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_6_tr_x, _1_6_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    # mcu corners (7)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_7_br_x, _1_7_br_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_7_tr_x, _1_7_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_7_tl_x, _1_7_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    # bottom ring corners (8)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_8_br_x, _1_8_br_y]
      radius: ref_position_circle_radius
      operation: stack
    # bottom outer corners (9)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_9_bl_x, _1_9_bl_y]
      radius: ref_position_circle_radius
      operation: stack
    # top outer corners (10)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_10_tl_x, _1_10_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    # top pinky corners (11)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_11_tr_x, _1_11_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    # top ring corners (12)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_12_tl_x, _1_12_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_12_tr_x, _1_12_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    # top middle corners (13)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_13_tl_x, _1_13_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_13_tr_x, _1_13_tr_y]
      radius: ref_position_circle_radius
      operation: stack
    # top index corners (14)
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_14_tl_x, _1_14_tl_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_1_14_tr_x, _1_14_tr_y]
      radius: ref_position_circle_radius
      operation: stack

  ref_intersections:
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_2_6__5_intersection_x, _2_6__5_intersection_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_3_4__5_intersection_x, _3_4__5_intersection_y]
      radius: ref_position_circle_radius
      operation: stack
    - what: circle
      where:
        ref: matrix_pinky_bottom
        shift: [_5__7_intersection_x, _5__7_intersection_y]
      radius: ref_position_circle_radius
      operation: stack

  ref_pos:
    - what: outline
      name: keys
    - what: outline
      name: switches
      operation: stack
    - what: outline
      name: mcu
    - what: outline
      name: ref_centers
      operation: stack
    - what: outline
      name: ref_corners
      operation: stack
    - what: outline
      name: ref_intersections
      operation: stack

  mcu_plate:
    # mcu plate
    - what: polygon
      points:
        - ref: matrix_pinky_bottom
          shift: [_1_7_tl_x, _1_7_tl_y]
        - ref: matrix_pinky_bottom
          shift: [_1_7_tr_x, _1_7_tr_y]
        - ref: matrix_pinky_bottom
          shift: [_5__7_intersection_x, _5__7_intersection_y]
        - ref: matrix_pinky_bottom
          shift: [_1_5_tr_x, _1_5_tr_y]
        - ref: matrix_pinky_bottom
          shift: [_1_5_tl_x, _1_5_tl_y]
        - ref: matrix_pinky_bottom
          shift: [_2_6__5_intersection_x, _2_6__5_intersection_y]

  matrix_plate:
    # outer bottom plate
    - what: rectangle
      where:
        ref: matrix_outer_bottom
        shift: [outer_bottom_shift_x, outer_bottom_shift_y]
      size: [outer_bottom_size_x, outer_bottom_size_y]
    # ring plate
    - what: rectangle
      where:
        ref: matrix_ring_home
        shift: [column_plate_shift_x, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]
    # right ring plate
    - what: rectangle
      where:
        ref: matrix_ring_home
        shift: [column_plate_shift_x + (key_spread)/2, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]
    # middle plate
    - what: rectangle
      where:
        ref: matrix_middle_home
        shift: [column_plate_shift_x, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]
    # index plate
    - what: rectangle
      where:
        ref: matrix_index_home
        shift: [column_plate_shift_x, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]
    # left index plate
    - what: rectangle
      where:
        ref: matrix_index_home
        shift: [column_plate_shift_x - (key_spread)/2, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]
    # inner plate
    - what: rectangle
      where:
        ref: matrix_inner_home
        shift: [column_plate_shift_x, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]
    # left inner plate
    - what: rectangle
      where:
        ref: matrix_inner_home
        shift: [column_plate_shift_x - (key_spread)/2, column_plate_shift_y]
      size: [column_plate_x, column_plate_y]

  thumbs_plate:
    - what: polygon
      points:
        - ref: matrix_pinky_bottom
          shift: [_1_8_br_x, _1_8_br_y]
        - ref: matrix_pinky_bottom
          shift: [_1_3_bl_x, _1_3_bl_y]
        - ref: matrix_pinky_bottom
          shift: [_3_4__5_intersection_x, _3_4__5_intersection_y]
        - ref: matrix_pinky_bottom
          shift: [_1_5_br_x, _1_5_br_y]
        - ref: matrix_pinky_bottom
          shift: [_1_5_tr_x, _1_5_tr_y]
        - ref: matrix_pinky_bottom
          shift: [_1_5_tl_x, _1_5_tl_y]
        - ref: matrix_pinky_bottom
          shift: [_2_6__5_intersection_x, _2_6__5_intersection_y]
        - ref: matrix_pinky_bottom
          shift: [_1_2_br_x, _1_2_br_y]

  plate:
    # mcu plate
    - what: outline
      name: mcu_plate
    # matrix plate
    - what: outline
      name: matrix_plate
    # thumbs plate
    - what: outline
      name: thumbs_plate

pcbs:
  main:
    template: kicad8
    outlines:
      main:
        outline: plate
    footprints:
      keyswitches:
        where: true
        what: ceoloide/switch_choc_v1_v2
        params:
          hotswap: true
          reversible: true
          from: "{{col_net}}"
          to: "{{colrow}}"
      mcu:
        what: ceoloide/mcu_supermini_nrf52840
        params:
          reversible: true
        where:
          ref: matrix_inner_top
          shift: [mcu_shift_x, mcu_shift_y]
  ref_pos:
    template: kicad8
    outlines:
      main:
        outline: ref_pos
